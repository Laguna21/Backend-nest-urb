services:
  database:
    image: postgres:alpine
    container_name: database
    environment:
      POSTGRES_DB: carna-database
      POSTGRES_USER: carna
      POSTGRES_PASSWORD: IjSJmKN1fcDZBLNHbVoxIh65JvsFFDO
    ports:
      - "5432:5432"
    volumes:
      - ./pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U carna -d carna-database"]
      interval: 10s
      timeout: 5s
      retries: 3
    networks:
      - app-network

  backend:
    container_name: backend
    build:
      context: .
      dockerfile: Dockerfile
    depends_on:
      database:
        condition: service_healthy
    environment:
      DATABASE_HOST: database
      DATABASE_PORT: 5432
      DATABASE_USERNAME: carna
      DATABASE_PASSWORD: IjSJmKN1fcDZBLNHbVoxIh65JvsFFDO
      DATABASE_NAME: carna-database
      NODE_ENV: development
      JWT_SECRET: 4125442A472D4B6150645367556B58703273357638792F423F4528482B4D6251
      JWT_REFRESH_SECRET: 576E5A7134743777217A25432A462D4A614E645267556B58703273357538782F
    ports:
      - "5000:5000"
    volumes:
      - ./src:/app/src
      - /app/node_modules
    working_dir: /app
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/api/healthcheck"]
      interval: 10s
      timeout: 5s
      retries: 3

  pgadmin:
    image: dpage/pgadmin4
    restart: always
    container_name: pgadmin
    ports:
      - "8080:80"
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@example.com
      PGADMIN_DEFAULT_PASSWORD: 123456
    depends_on:
      - database
    networks:
      - app-network

volumes:
  postgres_data:

networks:
  app-network:
    driver: bridge
